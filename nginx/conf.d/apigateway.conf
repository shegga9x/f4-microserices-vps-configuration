server {
    listen 443 ssl;
    server_name appf4.io.vn;

    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    location / {
        proxy_pass http://apigateway:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }
}
    # ðŸ”¹ Kafdrop with Keycloak Authentication
server {
    listen 443 ssl;
    server_name kafdrop.appf4.io.vn;

    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    resolver 8.8.8.8 ipv6=off;  # ðŸ”¹ Add this to fix the DNS issue

    location / {
        access_by_lua_block {
            local opts = {
                redirect_uri = "https://kafdrop.appf4.io.vn/oauth2/callback",
                discovery = "https://keycloak.appf4.io.vn/realms/jhipster/.well-known/openid-configuration",
                client_id = "web_app",
                client_secret = "",
                scope = "openid email profile",
                ssl_verify = "no"  -- Disable SSL verification if self-signed
            }
            local res, err = require("resty.openidc").authenticate(opts)
            if err then
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }

        proxy_pass http://kafdrop:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
    # ðŸ”¹ Consul with Keycloak Authentication
server {
    listen 443 ssl;
    server_name consul.appf4.io.vn;

    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    resolver 8.8.8.8 ipv6=off;  # Use Google DNS to resolve domain names

    location / {
        access_by_lua_block {
            local opts = {
                redirect_uri = "https://consul.appf4.io.vn/oauth2/callback",
                discovery = "https://keycloak.appf4.io.vn/realms/jhipster/.well-known/openid-configuration",
                client_id = "web_app",
                client_secret = "",
                scope = "openid email profile",
                ssl_verify = "no"  -- Disable SSL verification if self-signed
            }
            local res, err = require("resty.openidc").authenticate(opts)
            if err then 
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }

        proxy_pass http://consul:8500;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
    # ðŸ”¹ Jenkins with Keycloak Authentication

server {
    listen 443 ssl;
    server_name jenkins.appf4.io.vn;

    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    resolver 8.8.8.8 ipv6=off;  # Add this to fix the DNS issue

    location / {
        access_by_lua_block {
            local opts = {
                redirect_uri = "https://jenkins.appf4.io.vn/oauth2/callback",
                discovery = "https://keycloak.appf4.io.vn/realms/jhipster/.well-known/openid-configuration",
                client_id = "web_app",
                client_secret = "",
                scope = "openid email profile",
                ssl_verify = "no"  -- Disable SSL verification if self-signed
            }
            local res, err = require("resty.openidc").authenticate(opts)
            if err then 
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }

        proxy_pass http://jenkins:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;  # Pass protocol info to Jenkins
    }
}


